// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "05/18/2017 22:25:08"

// 
// Device: Altera EP2C5F256C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module OneBitAlu (
	a,
	b,
	Cin,
	Ain,
	Bin,
	Op,
	Cout,
	res);
input 	a;
input 	b;
input 	Cin;
input 	Ain;
input 	Bin;
input 	[1:0] Op;
output 	Cout;
output 	res;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \Bin~combout ;
wire \b~combout ;
wire \a~combout ;
wire \Ain~combout ;
wire \U4|out2~0_combout ;
wire \Cin~combout ;
wire \U4|out1~0_combout ;
wire \U6|Mux0~0_combout ;
wire \U6|Mux0~1_combout ;
wire \U6|Mux0~2_combout ;
wire [1:0] \Op~combout ;


cycloneii_io \Bin~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Bin~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Bin));
// synopsys translate_off
defparam \Bin~I .input_async_reset = "none";
defparam \Bin~I .input_power_up = "low";
defparam \Bin~I .input_register_mode = "none";
defparam \Bin~I .input_sync_reset = "none";
defparam \Bin~I .oe_async_reset = "none";
defparam \Bin~I .oe_power_up = "low";
defparam \Bin~I .oe_register_mode = "none";
defparam \Bin~I .oe_sync_reset = "none";
defparam \Bin~I .operation_mode = "input";
defparam \Bin~I .output_async_reset = "none";
defparam \Bin~I .output_power_up = "low";
defparam \Bin~I .output_register_mode = "none";
defparam \Bin~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \b~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\b~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(b));
// synopsys translate_off
defparam \b~I .input_async_reset = "none";
defparam \b~I .input_power_up = "low";
defparam \b~I .input_register_mode = "none";
defparam \b~I .input_sync_reset = "none";
defparam \b~I .oe_async_reset = "none";
defparam \b~I .oe_power_up = "low";
defparam \b~I .oe_register_mode = "none";
defparam \b~I .oe_sync_reset = "none";
defparam \b~I .operation_mode = "input";
defparam \b~I .output_async_reset = "none";
defparam \b~I .output_power_up = "low";
defparam \b~I .output_register_mode = "none";
defparam \b~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \a~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\a~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(a));
// synopsys translate_off
defparam \a~I .input_async_reset = "none";
defparam \a~I .input_power_up = "low";
defparam \a~I .input_register_mode = "none";
defparam \a~I .input_sync_reset = "none";
defparam \a~I .oe_async_reset = "none";
defparam \a~I .oe_power_up = "low";
defparam \a~I .oe_register_mode = "none";
defparam \a~I .oe_sync_reset = "none";
defparam \a~I .operation_mode = "input";
defparam \a~I .output_async_reset = "none";
defparam \a~I .output_power_up = "low";
defparam \a~I .output_register_mode = "none";
defparam \a~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Ain~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Ain~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Ain));
// synopsys translate_off
defparam \Ain~I .input_async_reset = "none";
defparam \Ain~I .input_power_up = "low";
defparam \Ain~I .input_register_mode = "none";
defparam \Ain~I .input_sync_reset = "none";
defparam \Ain~I .oe_async_reset = "none";
defparam \Ain~I .oe_power_up = "low";
defparam \Ain~I .oe_register_mode = "none";
defparam \Ain~I .oe_sync_reset = "none";
defparam \Ain~I .operation_mode = "input";
defparam \Ain~I .output_async_reset = "none";
defparam \Ain~I .output_power_up = "low";
defparam \Ain~I .output_register_mode = "none";
defparam \Ain~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \U4|out2~0 (
// Equation(s):
// \U4|out2~0_combout  = \a~combout  $ (\Ain~combout )

	.dataa(vcc),
	.datab(vcc),
	.datac(\a~combout ),
	.datad(\Ain~combout ),
	.cin(gnd),
	.combout(\U4|out2~0_combout ),
	.cout());
// synopsys translate_off
defparam \U4|out2~0 .lut_mask = 16'h0FF0;
defparam \U4|out2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \Cin~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Cin~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Cin));
// synopsys translate_off
defparam \Cin~I .input_async_reset = "none";
defparam \Cin~I .input_power_up = "low";
defparam \Cin~I .input_register_mode = "none";
defparam \Cin~I .input_sync_reset = "none";
defparam \Cin~I .oe_async_reset = "none";
defparam \Cin~I .oe_power_up = "low";
defparam \Cin~I .oe_register_mode = "none";
defparam \Cin~I .oe_sync_reset = "none";
defparam \Cin~I .operation_mode = "input";
defparam \Cin~I .output_async_reset = "none";
defparam \Cin~I .output_power_up = "low";
defparam \Cin~I .output_register_mode = "none";
defparam \Cin~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \U4|out1~0 (
// Equation(s):
// \U4|out1~0_combout  = (\U4|out2~0_combout  & ((\Cin~combout ) # (\Bin~combout  $ (\b~combout )))) # (!\U4|out2~0_combout  & (\Cin~combout  & (\Bin~combout  $ (\b~combout ))))

	.dataa(\Bin~combout ),
	.datab(\b~combout ),
	.datac(\U4|out2~0_combout ),
	.datad(\Cin~combout ),
	.cin(gnd),
	.combout(\U4|out1~0_combout ),
	.cout());
// synopsys translate_off
defparam \U4|out1~0 .lut_mask = 16'hF660;
defparam \U4|out1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \Op[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Op~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Op[0]));
// synopsys translate_off
defparam \Op[0]~I .input_async_reset = "none";
defparam \Op[0]~I .input_power_up = "low";
defparam \Op[0]~I .input_register_mode = "none";
defparam \Op[0]~I .input_sync_reset = "none";
defparam \Op[0]~I .oe_async_reset = "none";
defparam \Op[0]~I .oe_power_up = "low";
defparam \Op[0]~I .oe_register_mode = "none";
defparam \Op[0]~I .oe_sync_reset = "none";
defparam \Op[0]~I .operation_mode = "input";
defparam \Op[0]~I .output_async_reset = "none";
defparam \Op[0]~I .output_power_up = "low";
defparam \Op[0]~I .output_register_mode = "none";
defparam \Op[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \Op[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\Op~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Op[1]));
// synopsys translate_off
defparam \Op[1]~I .input_async_reset = "none";
defparam \Op[1]~I .input_power_up = "low";
defparam \Op[1]~I .input_register_mode = "none";
defparam \Op[1]~I .input_sync_reset = "none";
defparam \Op[1]~I .oe_async_reset = "none";
defparam \Op[1]~I .oe_power_up = "low";
defparam \Op[1]~I .oe_register_mode = "none";
defparam \Op[1]~I .oe_sync_reset = "none";
defparam \Op[1]~I .operation_mode = "input";
defparam \Op[1]~I .output_async_reset = "none";
defparam \Op[1]~I .output_power_up = "low";
defparam \Op[1]~I .output_register_mode = "none";
defparam \Op[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \U6|Mux0~0 (
// Equation(s):
// \U6|Mux0~0_combout  = (\Op~combout [0] & ((\a~combout  $ (\Ain~combout )))) # (!\Op~combout [0] & (\Cin~combout ))

	.dataa(\Cin~combout ),
	.datab(\Op~combout [0]),
	.datac(\a~combout ),
	.datad(\Ain~combout ),
	.cin(gnd),
	.combout(\U6|Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \U6|Mux0~0 .lut_mask = 16'h2EE2;
defparam \U6|Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \U6|Mux0~1 (
// Equation(s):
// \U6|Mux0~1_combout  = \Bin~combout  $ (\b~combout  $ (((\Op~combout [1] & \U6|Mux0~0_combout ))))

	.dataa(\Bin~combout ),
	.datab(\b~combout ),
	.datac(\Op~combout [1]),
	.datad(\U6|Mux0~0_combout ),
	.cin(gnd),
	.combout(\U6|Mux0~1_combout ),
	.cout());
// synopsys translate_off
defparam \U6|Mux0~1 .lut_mask = 16'h9666;
defparam \U6|Mux0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \U6|Mux0~2 (
// Equation(s):
// \U6|Mux0~2_combout  = (\U6|Mux0~1_combout  & ((\Op~combout [0]) # (\U4|out2~0_combout  $ (\Op~combout [1])))) # (!\U6|Mux0~1_combout  & (\U4|out2~0_combout  & (\Op~combout [0] $ (\Op~combout [1]))))

	.dataa(\U4|out2~0_combout ),
	.datab(\Op~combout [0]),
	.datac(\Op~combout [1]),
	.datad(\U6|Mux0~1_combout ),
	.cin(gnd),
	.combout(\U6|Mux0~2_combout ),
	.cout());
// synopsys translate_off
defparam \U6|Mux0~2 .lut_mask = 16'hDE28;
defparam \U6|Mux0~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \Cout~I (
	.datain(\U4|out1~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(Cout));
// synopsys translate_off
defparam \Cout~I .input_async_reset = "none";
defparam \Cout~I .input_power_up = "low";
defparam \Cout~I .input_register_mode = "none";
defparam \Cout~I .input_sync_reset = "none";
defparam \Cout~I .oe_async_reset = "none";
defparam \Cout~I .oe_power_up = "low";
defparam \Cout~I .oe_register_mode = "none";
defparam \Cout~I .oe_sync_reset = "none";
defparam \Cout~I .operation_mode = "output";
defparam \Cout~I .output_async_reset = "none";
defparam \Cout~I .output_power_up = "low";
defparam \Cout~I .output_register_mode = "none";
defparam \Cout~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \res~I (
	.datain(\U6|Mux0~2_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(res));
// synopsys translate_off
defparam \res~I .input_async_reset = "none";
defparam \res~I .input_power_up = "low";
defparam \res~I .input_register_mode = "none";
defparam \res~I .input_sync_reset = "none";
defparam \res~I .oe_async_reset = "none";
defparam \res~I .oe_power_up = "low";
defparam \res~I .oe_register_mode = "none";
defparam \res~I .oe_sync_reset = "none";
defparam \res~I .operation_mode = "output";
defparam \res~I .output_async_reset = "none";
defparam \res~I .output_power_up = "low";
defparam \res~I .output_register_mode = "none";
defparam \res~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
